#include <iostream>#include <cstdio>#include <cstring>#include <cmath>#include <algorithm>using namespace std;int re()  {    int p = 0, f = 1; char i = getchar();    while(i < '0' || i > '9')    {        if(i == '-')  f = -1;        i = getchar();    }    while(i >= '0' && i <= '9') p = p * 10 + i - '0', i = getchar();    return f * p;}const int N = 3e6 + 10;int T;int n, k, tot, top, res;int stack[N], sum[N];char s[N];int main(){    T = re();    while(T--)    {        n = re(); k = re();        tot = 0;        scanf("%s", &s);        tot = top = res = 0;        for(int i = 0; i < n; i++)        {            stack[++top] = s[i] - '0';            tot += s[i] - '0';            if(tot == k) {                top -= k;                res++;                tot = 0;            }            if(s[i] == '0') tot = 0;        }        for(int i = 1; i <= top; i++)            sum[i] = sum[i - 1] + stack[i];        for(int i = 1; i + k - 1 <= top; i++)        {            int l, r;            l = i; r = i + k - 1;            if(sum[r] - sum[l - 1] == k - 1) {                res++;                break;            }        }        printf("%d\n", res);        for(int i = 1; i <= top; i++)            stack[i] = sum[i] = 0;    }    return 0;}